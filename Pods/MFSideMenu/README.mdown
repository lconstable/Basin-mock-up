# MFSideMenu
=======

This project was inspired by the Facebook iOS app. The idea is to give a slideout menu to a UINavigationController-based app.

=======

[![](http://i.imgur.com/jf2RM.png)](http://i.imgur.com/jf2RM.png)
[![](http://i.imgur.com/Ah5mP.png)
[![](http://i.imgur.com/KN4IB.png)

Features
=======
- Universal device support (iPhone + iPad)
- Universal orientation support (Portrait + Landscape)
- The menu can display on the left or right side of the screen.
- Support for UINavigationController or UITabBarController as the window's rootViewController.
- Toggle the menu by pressing the UIBarButtonItem or by dragging your UINavigationController to the side.
- When the menu is visible you can tap or drag it back to the closed position.
- Optional shadow between UINavigationController and menu
- Lightweight, simple and readable code.


Basic Setup
=======
Note: QuartzCore is required for shadow rendering

1. Bring the MFSideMenu folder into your project.
2. Create your menu (a UITableViewController -- in the demo this is the SideMenuViewController class)
3. Initiate MFSideMenu in your app delegate:<br />
	```objective-c                                             
    MFSideMenu *sideMenu = [MFSideMenu menuWithNavigationController:navigationController
                                                 sideMenuController:sideMenuController];
    sideMenuController.sideMenu = sideMenu;
                                                 
    self.window.rootViewController = navigationController;
    [self.window makeKeyAndVisible];
    ```
4. (Optional) For UIBarButtonItem support add this to your UIViewController. Note that the UIBarButtons will automatically be setup for the rootViewController of your UINavigationController. The UIBarButtonItems can be disabled, see MFSideMenuOptions.<br />
    `[self.navigationController.sideMenu setupSideMenuBarButtonItem];`


Configuration
=======
Checkout MFSideMenu.h to get the full gist of the configuration options.

- **MFSideMenuLocation** lets you choose which side of the screen you want the menu to display on (left/right).
- **MFSideMenuOptions** let you enable/disable the UIBarButtonItems as well as the shadow.
- **MFSideMenuPanMode** lets you control the areas that can be panned in order to show the menu. You can use this to disable panning on the UINavigationBar or on the body of the UINavigationController.
- **MFSideMenuState** tells you the current state of the menu (open or closed)
- **MFSideMenuStateEventBlock** can be used to receive notifications of MFSideMenuStateEvents. You can do this like so:<br />

```objective-c
    self.navigationController.sideMenu.menuStateEventBlock = ^(MFSideMenuStateEvent event) {
        switch (event) {
            case MFSideMenuStateEventMenuWillOpen:
                // the menu will open
                break;
            case MFSideMenuStateEventMenuDidOpen:
                // the menu finished opening
                break;
            case MFSideMenuStateEventMenuWillClose:
                // the menu will close
                break;
            case MFSideMenuStateEventMenuDidClose:
                // the menu finished closing
                break;
        }
    }; 
```
    
License
=======
Copyright (c) 2012, Michael Frederick
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 
* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

* Neither the name of Michael Frederick, 'viamike.com' nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Michael Frederick BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Contact
=======

mike@viamike.com<br />
http://viamike.com<br />
http://twitter.com/mike_frederick